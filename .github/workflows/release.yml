name: Release

on:
  push:
    tags:
      - 'v*'
jobs:

  preRelease:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: cmd/client/templatizer-ui
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup node version 14
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Install dependencies
        run: yarn install

      - name: Build and minimize code
        run: yarn build

      - name: Save created files
        uses: actions/upload-artifact@v2
        with:
          name: templatizer-ui-build
          path: cmd/client/templatizer-ui/build

  goreleaser:
    runs-on: ubuntu-20.04
    needs:
      - preRelease
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install Snapcraft
        uses: samuelmeuli/action-snapcraft@v1

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: Download created content in previous steps
        uses: actions/download-artifact@v2
        with:
          name: templatizer-ui-build
          path: cmd/client/templatizer-ui/build

      - name:  Set up Go 1.17
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Install Go project
        run: make install
      -
        name: Import GPG key
        id: import_gpg
        uses: hashicorp/ghaction-import-gpg@v2.1.0
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAP_GITHUB_TOKEN: ${{ secrets.TAP_GITHUB_TOKEN }}
          FURY_TOKEN: ${{ secrets.FURYPUSHTOKEN }}
